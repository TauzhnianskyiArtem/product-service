plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

apply from: 'version.gradle'

group = 'com.iprody'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdocOpenApi}"
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation platform("io.micrometer:micrometer-tracing-bom:${versions.micrometerTracing}")
    implementation 'io.micrometer:micrometer-tracing'
    implementation 'io.micrometer:micrometer-tracing-bridge-otel'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:postgresql:${versions.testContainers}"
    testImplementation 'io.micrometer:micrometer-observation-test'
    testImplementation "org.logcapture:logcapture-core:${versions.logcapture}"
    testImplementation "org.logcapture:logcapture-junit5:${versions.logcapture}"
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

jar {
    enabled = false
}

ext {
    isTest = project.hasProperty('profile') ? project.property('profile') == 'test' : false
}

bootJar {
    archiveClassifier.set("exec")

    if(!isTest) {
        exclude '**/changeset/test/**'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
